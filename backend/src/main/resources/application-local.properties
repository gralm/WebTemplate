# https://mkyong.com/spring-boot/spring-boot-slf4j-logging-example/

# standard(http) is 80 and 443 for SSL(https)
server.port=8081

# logging level
logging.level.org.springframework=INFO
logging.level.se.hillerstadhill.backend=INFO

# output to a file
logging.file.path=${java.io.tmpdir}
logging.file.name=app.log


# temp folder example
#logging.file=${java.io.tmpdir}/app.log
logging.pattern.file=%d %p %c{1.} [%t] %m%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

# database, is commented and configured in DatabaseConfig

# spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.username=root
# spring.datasource.username=${DB_USER}
#spring.datasource.password=password
# spring.datasource.password=${DB_PASS}
#spring.datasource.driver-class-name=
# should be set to none as standard, update/create/create_drop only in development
# create,
# create-drop,
# validate,
# update, 'will attempt to add new columns, constraints, etc but will never remove a column or constraint', creates table if not exist
spring.jpa.hibernate.ddl-auto=update

# the following line is needed, otherwise the server terminal logs
# 021-04-27 18:42:00,107 ERROR [pool-1-thread-1] org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler: Unexpected error occurred in scheduled task
# org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [DELETE FROM SPRING_SESSION WHERE EXPIRY_TIME < ?]; nested exception is java.sql.SQLSyntaxErrorException: Table
spring.session.jdbc.initialize-schema=always

example.firstProperty=tjena

# https://www.baeldung.com/spring-mvc-static-resources
# spring.mvc.static-path-pattern=/

# These are needed otherwise Rest-service returns (Reason: CORS header ?Access-Control-Allow-Origin? missing).
security.require-ssl=false
server.ssl.enabled=false